def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: "com.github.konifar.gradle.unused-resources-remover"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
    ndkVersion cfg.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.admin"
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        ndk {
            abiFilters "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
        }
        externalNativeBuild {
            ndkBuild {
                arguments '-j4'
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    dataBinding {
        enabled = true
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //androidx and google libs
    implementation "androidx.appcompat:appcompat:$libs.appcompat"
    implementation "androidx.lifecycle:lifecycle-extensions:$libs.lifecycle"
    implementation "com.google.android.material:material:$libs.material"
    implementation "com.google.android.gms:play-services-location:$libs.playServicesVersionLocation"
    implementation "androidx.room:room-runtime:$libs.room"
    annotationProcessor "androidx.room:room-compiler:$libs.room"

    //Log and stat
    implementation "com.yandex.android:mobmetricalib:$libs.yandexmetrica"
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.android.gms:play-services-base:17.5.0'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging:23.0.0'
    implementation 'com.google.firebase:firebase-analytics:18.0.2'
    implementation "com.google.firebase:firebase-crashlytics:17.4.1"
    implementation 'com.amplitude:android-sdk:2.29.2'
}
